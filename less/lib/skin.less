#shadow(@a:0, @b:0, @c:1em, @d:0, @e:.25) {
	
	
	@shadowX: 				@a;
	@shadowY: 				@b;
	@shadowBlur: 			@c;
	@shadowSpread: 		@d;
	@shadowAlpha: 		@e;
	

	.multi () {
		@var: ~`"@{arguments}".toString().replace(/[\[\]]/g,'')`;
		-moz-box-shadow: @var;
		-webkit-box-shadow: @var;
		box-shadow: @var;		
	}


	.none () { .set(0); }


	.set (@x:@shadowX, @y:@shadowY, @blur:@shadowBlur, @spread:@shadowSpread, @alpha:@shadowAlpha) { 
		-moz-box-shadow: @arguments;
		-webkit-box-shadow: @arguments;
		box-shadow: @arguments;			
	} 


	.drop (@x:@shadowX, @y:@shadowY, @blur:@shadowBlur, @spread:@shadowSpread, @alpha:@shadowAlpha) {
		.set (@x @y @blur @spread rgba(0, 0, 0, @alpha));
	}


	.inner (@x:@shadowX, @y:@shadowY, @blur:@shadowBlur, @spread:@shadowSpread, @alpha:@shadowAlpha) {
		.set (inset @x @y @blur rgba(0, 0, 0, @alpha));
	}

	.blurText (@color:#777, @alpha:.5) {
		text-shadow:0 0 20px hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	}
	
	.embossText (@color:#777, @alpha:.5) {
		text-shadow:0 1px 0 hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	}
}



#bkg {

	.size () { //width, height, contain/cover
		-moz-background-size: @arguments;
		-o-background-size: @arguments;
		-webkit-background-size: @arguments;
		background-size: @arguments;				
	}
		
	.origin (@type: padding) { //padding, border, content; padding is default
		@declaration: ~`"@{type}-box"`;
		-moz-background-origin:@type;
		-webkit-background-origin:@declaration;
		background-origin:@declaration;
	}

	.clip (@type: border) { //padding, border, content; border is default
		@declaration: ~`"@{type}-box"`;
		-moz-background-clip:@type;
		-webkit-background-clip:@declaration;
		background-clip:@declaration;
	}

	.translucent (@color:#fff, @alpha:1){
		background-color:hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	}	

}


.ir(@h:10px, @w:10px, @url, @repeat:no-repeat) { 
	background:url(@url) @repeat;
	height:@h; width:@w;
	overflow:hidden; text-indent:-999em; 
	
}
.sprite (@y:0, @x:0) { background-position:@y @x; }	


#gradient {
	
	._make (@bgColor, @std, @oldwebkit) {
		background-color: @bgColor;
	  background-image: -o-linear-gradient(@std);
	  background-image: -moz-linear-gradient(@std);
	  background-image: -ms-linear-gradient(@std);	
	  background-image: -webkit-linear-gradient(@std);
	  background-image: -webkit-gradient(@oldwebkit);
	  background-image: linear-gradient(@std);
	}
	
	//gleaned from http://leaverou.me/demos/css3-patterns.html
	.hPattern (@bgColor: #000, @shade:.2, @height:50%) { //use @bkg > .size to change the pattern
		@gutter: 			100% - @height;
		@from: 				rgba(255,255,255,@shade);

		@std: 				"@{from} @{height}, transparent @{gutter}, transparent";
		@oldwebkit: 	"linear, 0 0, 0 100%, color-stop(@{height}, @{from}), color-stop(@{gutter}, transparent), to(transparent)";

		#gradient > ._make(@bgColor, @std, @oldwebkit);
	}
	
	.vPattern (@bgColor: #000, @shade:.2, @height:50%) {
		@gutter: 			100% - @height;
		@from: 				rgba(255,255,255,@shade);

		@std: 				"0deg, @{from} @{height}, transparent @{gutter}, transparent";
		@oldwebkit: 	"linear, 0 0, 100% 0, color-stop(@{height}, @{from}), color-stop(@{gutter}, transparent), to(transparent)";

		#gradient > ._make(@bgColor, @std, @oldwebkit);
	}

	.45Pattern (@bgColor:#000, @shade:.2) {
		@from: 				rgba(255, 255, 255, @shade);

		@std: 				"45deg, @{from} 25%, transparent 25%, transparent 50%, @{from} 50%, @{from} 75%, transparent 75%, transparent";
		@oldwebkit: 	"linear, 0 0, 100% 100%, color-stop(.25, @{from}), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, @{from}), color-stop(.75, @{from}), color-stop(.75, transparent),to(transparent)";

		#gradient > ._make(@bgColor, @std, @oldwebkit);
	}
	
	.315Pattern (@bgColor:#000, @shade:.2) {
		@from: 				rgba(255, 255, 255, @shade);

		@std: 				"-45deg, @{from} 25%, transparent 25%, transparent 50%, @{from} 50%, @{from} 75%, transparent 75%, transparent";
		@oldwebkit: 	"linear, 0 100%, 100% 0, color-stop(.25, @{from}), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, @{from}), color-stop(.75, @{from}), color-stop(.75, transparent), to(transparent)";

		#gradient > ._make(@bgColor, @std, @oldwebkit);
	}
	
	.checkered (@bgColor:#000, @shade:.2, @2:transparent) {
		@from: 						rgba(255, 255, 255, @shade);

		background-color: @bgColor;

	  background-image: -o-linear-gradient(45deg, @from 25%, @2 25%, @2),
		              		-o-linear-gradient(-45deg, @from 25%, @2 25%, @2),
		              		-o-linear-gradient(45deg, @2 75%, @from 75%),
		              		-o-linear-gradient(-45deg, @2 75%, @from 75%);
	  background-image: -moz-linear-gradient(45deg, @from 25%, @2 25%, @2),
											-moz-linear-gradient(-45deg, @from 25%, @2 25%, @2),
											-moz-linear-gradient(45deg, @2 75%, @from 75%),
											-moz-linear-gradient(-45deg, @2 75%, @from 75%);
	  background-image: -ms-linear-gradient(45deg, @from 25%, @2 25%, @2),
											-ms-linear-gradient(-45deg, @from 25%, @2 25%, @2),
											-ms-linear-gradient(45deg, @2 75%, @from 75%),
											-ms-linear-gradient(-45deg, @2 75%, @from 75%);
	  background-image: -webkit-linear-gradient(45deg, @from 25%, @2 25%, @2),
											-webkit-linear-gradient(-45deg, @from 25%, @2 25%, @2),
											-webkit-linear-gradient(45deg, @2 75%, @from 75%),
											-webkit-linear-gradient(-45deg, @2 75%, @from 75%);
	  background-image: -webkit-gradient(linear, 0 0, 100% 100%, color-stop(.25, @from), color-stop(.25, @2), to(@2)),
											-webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, @from), color-stop(.25, @2), to(@2)),
											-webkit-gradient(linear, 0 0, 100% 100%, color-stop(.75, @2), color-stop(.75, @from)),
											-webkit-gradient(linear, 0 100%, 100% 0, color-stop(.75, @2), color-stop(.75, @from));
	  background-image: linear-gradient(45deg, @from 25%, @2 25%, @2),
		              		linear-gradient(-45deg, @from 25%, @2 25%, @2),
		              		linear-gradient(45deg, @2 75%, @from 75%),
		              		linear-gradient(-45deg, @2 75%, @from 75%);
	}
	
	.top (@bgColor:#f5f5f5, @from:#eee, @to:#fff) {
		@std: "top @{from} @{to}";
		@oldwebkit: "linear, 0 0, 0 100%, @{from}, @{to}";

		#gradient > ._make(@bgColor, @std, @oldwebkit);
	}
	
}


#translucent {
	.border (@color:#fff, @alpha:1) {
		border-color:hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
		#bkg > .clip(padding);
	}
}


#radius {
	.all (@radius:2px) {
		-moz-border-radius: @radius;
		-webkit-border-radius: @radius;
		border-radius: @radius;
	}
	.tr(@1:0){
		-moz-border-radius-topright: @1;
		-webkit-border-top-right-radius: @1;
		border-top-right-radius: @1;
	}
	.tl(@1:0){
		-moz-border-radius-topleft: @1;
		-webkit-border-top-left-radius: @1;
		border-top-left-radius: @1;
	}
	.br(@1:0){
		-moz-border-radius-bottomright: @1;
		-webkit-border-bottom-right-radius: @1;
		border-bottom-right-radius: @1;
	}
	.bl(@1:0){
		-moz-border-radius-bottomleft: @1;
		-webkit-border-bottom-left-radius: @1;
		border-bottom-left-radius: @1;
	}
	.none() { #radius > .all(0); }
}




